{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["Statistics","total","good","neutral","bad","positive","className","style","toFixed","FeedbackOptions","clickGood","clickNeutral","clickBad","type","onClick","Notification","message","Section","title","children","name","App","state","totalFeedback","positiveFeedback","onClickGood","setState","prevState","onClickBad","onClickNeutral","this","Component","propTypes","PropTypes","string","isRequired","func","number","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0RAgBeA,EAXI,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAKC,EAAd,EAAcA,QAAQC,EAAtB,EAAsBA,IAAKC,EAA3B,EAA2BA,SAA3B,OAEf,+BACI,qBAAIC,UAAWC,IAAML,KAArB,kBAAiCA,KACjC,qBAAII,UAAWC,IAAMH,IAArB,iBAA+BA,KAC/B,qBAAIE,UAAWC,IAAMJ,QAArB,qBAAuCA,KACvC,wCAAWF,KACX,oDAAuBI,EAASG,QAAQ,GAAxC,W,gBCAOC,EATS,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,SAA3B,OACpB,gCACA,wBAAQC,KAAK,SAASC,QAASJ,EAAWJ,UAAWC,IAAML,KAA3D,kBACI,wBAAQW,KAAK,SAASC,QAASF,EAAUN,UAAWC,IAAMH,IAA1D,iBACA,wBAAQS,KAAK,SAASC,QAASH,EAAcL,UAAWC,IAAMJ,QAA9D,yBCDOY,EAJM,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACjB,6BAAKA,K,gBCKMC,EAPC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,oCACA,oBAAIb,UAAWC,IAAMa,KAArB,SAA4BF,IAC3BC,MCMKE,E,4MAEFC,MAAQ,CACJpB,KAAK,EACLC,QAAS,EACTC,IAAK,G,EAETmB,cAAgB,wEAA0B,EAAKD,MAA5BpB,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAlB,OACZF,EAAOC,EAAUC,G,EACrBoB,iBAAmB,wEAAU,EAAKF,MAAbpB,EAAF,EAAEA,KAAoBD,EAAtB,uDAA8B,EAAKsB,gBAAnC,OACR,IAAPrB,EAAaD,G,EACjBwB,YAAc,WACV,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBzB,KAAMyB,EAAUzB,KAAM,O,EAG9B0B,WAAa,WACT,EAAKF,UAAS,SAAAC,GAAS,MAAK,CACxBvB,IAAKuB,EAAUvB,IAAK,O,EAG5ByB,eAAiB,WACb,EAAKH,UAAS,SAAAC,GAAS,MAAK,CACxBxB,QAASwB,EAAUxB,QAAS,O,4CAMpC,WAEI,MAA6B2B,KAAKR,MAA3BlB,EAAP,EAAOA,IAAKF,EAAZ,EAAYA,KAAMC,EAAlB,EAAkBA,QAGlB,OACI,eAAE,EAAF,CAAUe,MAAS,wBAAnB,UAEI,cAAC,EAAD,CACIR,UAAaoB,KAAKL,YAClBb,SAAYkB,KAAKF,WACjBjB,aAAemB,KAAKD,iBAIxB,4CACCC,KAAKP,gBAAkB,EACpB,cAAE,EAAF,CACIrB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLH,MAAO6B,KAAKP,gBACZlB,SAAUyB,KAAKN,qBAInB,cAAC,EAAD,CACIR,QAAS,6B,GAxDfe,aAmErBd,EAAQe,UAAY,CAChBd,MAAOe,IAAUC,OAAOC,YAE5B1B,EAAgBuB,UAAY,CACrBtB,UAAWuB,IAAUG,KAAKD,WAC7BvB,SAAUqB,IAAUG,KAAKD,WACzBxB,aAAcsB,IAAUG,KAAKD,YAEjCnC,EAAWgC,UAAY,CAChB9B,KAAM+B,IAAUI,OAAOF,WACvB/B,IAAK6B,IAAUI,OAAOF,WACtBhC,QAAS8B,IAAUI,OAAOF,WAC1BlC,MAAOgC,IAAUI,OAAOF,WACxB9B,SAAU4B,IAAUI,OAAOF,YAElCpB,EAAaiB,UAAY,CAClBhB,QAASiB,IAAUC,OAAOC,YAEnBd,QCnFAiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,KAAO,yBAAyB,IAAM,wBAAwB,QAAU,8B,kBCA1FD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,IAAM,6BAA6B,QAAU,mC,kBCApGD,EAAOC,QAAU,CAAC,KAAO,yB","file":"static/js/main.5198fa1a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from './Statistics.module.css'\r\n\r\n\r\n\r\nconst Statistics = ({total, good,neutral,bad, positive}) => (\r\n\r\n    <ul>\r\n        <li className={style.good}>Good:{good}</li>\r\n        <li className={style.bad}>Bad:{bad}</li>\r\n        <li className={style.neutral}>Neutral:{neutral}</li>\r\n        <li>Total:{total}</li>\r\n        <li>Positive feedback:{positive.toFixed(0)}%</li>\r\n    </ul>\r\n)\r\n\r\nexport default Statistics","import React from \"react\";\r\nimport style from './FeedbackOptions.module.css'\r\n\r\nconst FeedbackOptions = ({clickGood, clickNeutral, clickBad}) => (\r\n    <div>\r\n    <button type=\"button\" onClick={clickGood} className={style.good}>Good</button>\r\n        <button type=\"button\" onClick={clickBad} className={style.bad}>Bad</button>\r\n        <button type=\"button\" onClick={clickNeutral} className={style.neutral}>Neutral</button>\r\n    </div>\r\n\r\n)\r\n\r\nexport default FeedbackOptions","\r\n\r\nconst Notification = ({message}) => (\r\n    <h2>{message}</h2>\r\n)\r\n\r\nexport default Notification","import style from './Section.module.css'\r\nconst Section = ({title, children}) => (\r\n    <section>\r\n    <h1 className={style.name}>{title}</h1>\r\n    {children}\r\n    </section>\r\n)\r\n\r\nexport default Section","\n\n import React, {Component} from \"react\";\nimport PropTypes from 'prop-types'\nimport Statistics from './components/Statistics'\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Notification from \"./components/Notification\";\nimport Section from \"./components/Section\";\n\n\n    class App extends Component {\n\n        state = {\n            good:0,\n            neutral: 0,\n            bad: 0,\n        }\n        totalFeedback = ({ good, neutral, bad } = this.state) =>\n            good + neutral + bad;\n        positiveFeedback = ({good} = this.state, total = this.totalFeedback()) =>\n            good * 100 / total;\n        onClickGood = () => {\n            this.setState(prevState => ({\n                good: prevState.good +1,\n            }))\n        }\n        onClickBad = () => {\n            this.setState(prevState => ({\n                bad: prevState.bad +1,\n            }))\n        }\n        onClickNeutral = () => {\n            this.setState(prevState => ({\n                neutral: prevState.neutral +1,\n            }))\n        }\n\n\n\n        render() {\n\n            const {bad, good, neutral} = this.state;\n\n\n            return(\n                < Section title = {'Please leave feedback'}>\n\n                    <FeedbackOptions\n                        clickGood = {this.onClickGood}\n                        clickBad = {this.onClickBad}\n                        clickNeutral ={this.onClickNeutral}\n\n                    />\n\n                    <h2>Statistics</h2>\n                    {this.totalFeedback() > 0 ?\n                        < Statistics\n                            good={good}\n                            neutral={neutral}\n                            bad={bad}\n                            total={this.totalFeedback()}\n                            positive={this.positiveFeedback()}\n                        />\n                        :\n\n                        <Notification\n                            message={\"No feedback given\"}/>\n                    }\n\n                </Section>\n\n        )\n\n            }\n\n    }\n\n Section.propTypes = {\n     title: PropTypes.string.isRequired\n }\n FeedbackOptions.propTypes = {\n        clickGood: PropTypes.func.isRequired,\n     clickBad: PropTypes.func.isRequired,\n     clickNeutral: PropTypes.func.isRequired\n }\n Statistics.propTypes = {\n        good: PropTypes.number.isRequired,\n        bad: PropTypes.number.isRequired,\n        neutral: PropTypes.number.isRequired,\n        total: PropTypes.number.isRequired,\n        positive: PropTypes.number.isRequired\n }\n Notification.propTypes = {\n        message: PropTypes.string.isRequired\n }\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"Statistics_good__1lIVX\",\"bad\":\"Statistics_bad__3heR7\",\"neutral\":\"Statistics_neutral__1G5sA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"FeedbackOptions_good__3PGDD\",\"bad\":\"FeedbackOptions_bad__4AXhQ\",\"neutral\":\"FeedbackOptions_neutral__3eN_W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Section_name__3bqBX\"};"],"sourceRoot":""}